use namespace="System"
use namespace="System.IO"

functions
  @{
    private static Lazy<bool> _isOSX = new Lazy<bool>(() => 
        // Poor man's version for detecting if unix is Linux or Darwin.
        // Can't use unsafe code because sake doesn't pass the right
        // arguments for unsafe compilation
        Directory.Exists("/Applications") &&
        Directory.Exists("/System") &&
        Directory.Exists("/Users") &&
        Directory.Exists("/Volumes"));
  
    string CreateDayBasedVersionNumber()
    {
        var start = new DateTime(2015, 1, 1);
        var now = DateTime.UtcNow;

        string version = "0";
        // If the computer date is set before the start date, then the version is 0
        if (now >= start)
        {
            var yearsSinceStart = (now.Year - start.Year) + 1;
            version = yearsSinceStart + now.ToString("MMdd");
        }

        return version;
    }

    string BuildNumber
    {
        get
        {
            return "t" + DateTime.UtcNow.ToString("yyMMddHHmmss");
        }
    }
    
    string DotBuildFolderPath
    {
        get
        {
            return Environment.GetEnvironmentVariable("BUILD_FOLDER");
        }
    }
    
    string KoreBuildFolderPath
    {
        get 
        { 
            return Environment.GetEnvironmentVariable("KOREBUILD_FOLDER"); 
        }
    }

    bool IsTeamCity
    {
        get { return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("TEAMCITY_VERSION")); }
    }

    bool IsTravisCi
    {
        get { return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("TRAVIS")) &&
                !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("CONTINUOUS_INTEGRATION")); }
    }
    
    PlatformID OSPlatform 
    {
        get 
        {
            var platform = Environment.OSVersion.Platform;
            
            if (platform == PlatformID.Unix && 
                _isOSX.Value)
            {
                platform = PlatformID.MacOSX;
            }
            
            return platform;
        }
    }
}